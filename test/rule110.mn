extern функц хэвлэ(н тоо64) -> хоосон  {}
extern функц мөр_хэвлэх(м мөр) -> хоосон {}
extern функц унш32() -> тоо  {}

// Constants for Rule 110
зарла ДАВТАЛТЫН_ТОО: тоо = 50;
зарла МӨР_УРТ: тоо = 100;

// Function to apply Rule 110 to a single cell based on its neighbors
функц дүрэм110(зүүн: тоо, дунд: тоо, баруун: тоо) -> тоо {
    хэрэв зүүн == 1 бол {
        хэрэв дунд == 1 бол {
            хэрэв баруун == 1 бол буц 0;
            буц 1;
        }
        хэрэв баруун == 1 бол буц 1;
        буц 0;
    }
    хэрэв дунд == 1 бол {
        хэрэв баруун == 1 бол буц 1;
        буц 1;
    }
    хэрэв баруун == 1 бол буц 1;
    буц 0;
}

// Function to print the current state
функц төлөвХэвлэх(төлөв: тоо[]) -> хоосон {
    зарла i: тоо = 0;
    давтах i < МӨР_УРТ бол {
        хэрэв төлөв[i] == 1 бол {
            мөр_хэвлэх("█");
        } эсвэл {
            мөр_хэвлэх(" ");
        }
        i = i + 1;
    }
    мөр_хэвлэх("\n");
}

// Function to initialize the first row with a single 1 in the middle
функц анхныТөлөв() -> тоо[] {
    зарла төлөв: тоо[] = шинэ тоо[МӨР_УРТ];
    зарла i: тоо = 0;
    давтах i < МӨР_УРТ бол {
        төлөв[i] = 0;
        i = i + 1;
    }
    төлөв[МӨР_УРТ / 2] = 1;
    буц төлөв;
}

// Main function to run Rule 110
функц үндсэн() -> тоо {
    зарла одоогийнТөлөв: тоо[] = анхныТөлөв();
    зарла дараагийнТөлөв: тоо[] = шинэ тоо[МӨР_УРТ];
    зарла давталт: тоо = 0;
    
    давтах давталт < ДАВТАЛТЫН_ТОО бол {
        төлөвХэвлэх(одоогийнТөлөв);
        
        // Calculate next state
        зарла i: тоо = 0;
        давтах i < МӨР_УРТ бол {
            зарла зүүн: тоо = i == 0 ? 0 : одоогийнТөлөв[i - 1];
            зарла дунд: тоо = одоогийнТөлөв[i];
            зарла баруун: тоо = i == МӨР_УРТ - 1 ? 0 : одоогийнТөлөв[i + 1];
            
            дараагийнТөлөв[i] = дүрэм110(зүүн, дунд, баруун);
            i = i + 1;
        }
        
        // Copy next state to current state
        i = 0;
        давтах i < МӨР_УРТ бол {
            одоогийнТөлөв[i] = дараагийнТөлөв[i];
            i = i + 1;
        }
        
        давталт = давталт + 1;
    }
    
    буц 0;
} 